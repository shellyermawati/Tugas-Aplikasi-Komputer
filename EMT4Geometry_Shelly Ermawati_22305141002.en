% * Visualisasi dan Perhitungan Geometri dengan EMT
% 
% Nama : Shelly Ermawati
%% NIM  : 22305141002
%% Kelas: Matematika B
%% ---
%% Euler menyediakan beberapa fungsi untuk melakukan visualisasi dan
% perhitungan geometri, baik secara numerik maupun analitik (seperti
% biasanya tentunya, menggunakan Maxima). Fungsi-fungsi untuk
% visualisasi dan perhitungan geometeri tersebut disimpan di dalam file
% program "geometry.e", sehingga file tersebut harus dipanggil sebelum
% menggunakan fungsi-fungsi atau perintah-perintah untuk geometri.
>load geometry
Numerical and symbolic geometry.
% ** Fungsi-fungsi Geometri
% 
% Fungsi-fungsi untuk Menggambar Objek Geometri:
% 
%   defaultd:=textheight()*1.5: nilai asli untuk parameter d
%%   setPlotrange(x1,x2,y1,y2): menentukan rentang x dan y pada bidang
% koordinat
%%   setPlotRange(r): pusat bidang koordinat (0,0) dan batas-batas
% sumbu-x dan y adalah -r sd r
%%   plotPoint (P, "P"): menggambar titik P dan diberi label "P"
%%   plotSegment (A,B, "AB", d): menggambar ruas garis AB, diberi label
% "AB" sejauh d
%%   plotLine (g, "g", d): menggambar garis g diberi label "g" sejauh d
%%   plotCircle (c,"c",v,d): Menggambar lingkaran c dan diberi label "c"
%%   plotLabel (label, P, V, d): menuliskan label pada posisi P
% 
% Fungsi-fungsi Geometri Analitik (numerik maupun simbolik):
% 
%   turn(v, phi): memutar vektor v sejauh phi
%%   turnLeft(v):   memutar vektor v ke kiri
%%   turnRight(v):  memutar vektor v ke kanan
%%   normalize(v): normal vektor v
%%   crossProduct(v, w): hasil kali silang vektorv dan w.
%%   lineThrough(A, B): garis melalui A dan B, hasilnya [a,b,c] sdh.
% ax+by=c.
%%   lineWithDirection(A,v): garis melalui A searah vektor v
%%   getLineDirection(g): vektor arah (gradien) garis g
%%   getNormal(g): vektor normal (tegak lurus) garis g
%%   getPointOnLine(g):  titik pada garis g
%%   perpendicular(A, g):  garis melalui A tegak lurus garis g
%%   parallel (A, g):  garis melalui A sejajar garis g
%%   lineIntersection(g, h):  titik potong garis g dan h
%%   projectToLine(A, g):   proyeksi titik A pada garis g
%%   distance(A, B):  jarak titik A dan B
%%   distanceSquared(A, B):  kuadrat jarak A dan B
%%   quadrance(A, B): kuadrat jarak A dan B
%%   areaTriangle(A, B, C):  luas segitiga ABC
%%   computeAngle(A, B, C):   besar sudut <ABC
%%   angleBisector(A, B, C): garis bagi sudut <ABC
%%   circleWithCenter (A, r): lingkaran dengan pusat A dan jari-jari r
%%   getCircleCenter(c):  pusat lingkaran c
%%   getCircleRadius(c):  jari-jari lingkaran c
%%   circleThrough(A,B,C):  lingkaran melalui A, B, C
%%   middlePerpendicular(A, B): titik tengah AB
%%   lineCircleIntersections(g, c): titik potong garis g dan lingkran c
%%   circleCircleIntersections (c1, c2):  titik potong lingkaran c1 dan
% c2
%%   planeThrough(A, B, C):  bidang melalui titik A, B, C
% 
% Fungsi-fungsi Khusus Untuk Geometri Simbolik:
% 
%   getLineEquation (g,x,y): persamaan garis g dinyatakan dalam x dan y
%%   getHesseForm (g,x,y,A): bentuk Hesse garis g dinyatakan dalam x dan
% y dengan titik A pada sisi positif (kanan/atas) garis
%%   quad(A,B): kuadrat jarak AB
%%   spread(a,b,c): Spread segitiga dengan panjang sisi-sisi a,b,c, yakni
% sin(alpha)^2 dengan alpha sudut yang menghadap sisi a.
%%   crosslaw(a,b,c,sa): persamaan 3 quads dan 1 spread pada segitiga
% dengan panjang sisi a, b, c.
%%   triplespread(sa,sb,sc): persamaan 3 spread sa,sb,sc yang memebntuk
% suatu segitiga
%%   doublespread(sa): Spread sudut rangkap Spread 2*phi, dengan
% sa=sin(phi)^2 spread a.
% 
% ** Contoh 1: Luas, Lingkaran Luar, Lingkaran Dalam Segitiga
% 
% Untuk menggambar objek-objek geometri, langkah pertama adalah
% menentukan rentang sumbu-sumbu koordinat. Semua objek geometri akan
% digambar pada satu bidang koordinat, sampai didefinisikan bidang
% koordinat yang baru.
>setPlotRange(-0.5,2.5,-0.5,2.5); // mendefinisikan bidang koordinat baru 
% Sekarang atur tiga poin dan plot.
>A=[1,0]; plotPoint(A,"A"); // definisi dan gambar tiga titik
>B=[0,1]; plotPoint(B,"B");
>C=[2,2]; plotPoint(C,"C");
% Lalu tiga segmen.
>plotSegment(A,B,"c"); // c=AB
>plotSegment(B,C,"a"); // a=BC
>plotSegment(A,C,"b"); // b=AC
% Fungsi geometri meliputi fungsi untuk membuat garis dan lingkaran.
% Format untuk garis adalah [a, b, c], yang merepresentasikan garis
% dengan persamaan ax + by = c.
>lineThrough(B,C) // garis yang melalui B dan C
[-1,  2,  2]
% Hitung garis tegak lurus melalui A pada BC.
>h=perpendicular(A,lineThrough(B,C)); // garis h tegak lurus BC melalui A
% Dan perpotongannya dengan BC.
>D=lineIntersection(h,lineThrough(B,C)); // D adalah titik potong h dan BC
% Plot itu.
>plotPoint(D,value=1); // koordinat D ditampilkan
>aspect(1); plotSegment(A,D): // tampilkan semua gambar hasil plot...()
 %image% EMT4Geometry_Shelly Ermawati_22305141002-001.png
% Hitung luas ABC:
% 
% latex: L_{\triangle ABC}= \frac{1}{2}AD.BC.
>norm(A-D)*norm(B-C)/2 // AD=norm(A-D), BC=norm(B-C)
1.5
% Cara lain menghitung rumus determinan.
>areaTriangle(A,B,C) // hitung luas segitiga langusng dengan fungsi
1.5
% Cara lain menghitung luas segitigas ABC:
>distance(A,D)*distance(B,C)/2
1.5
% Sudut di C
>degprint(computeAngle(B,C,A))
36°52'11.63''
% Sekarang lingkaran sirkit segitiga.
>c=circleThrough(A,B,C); // lingkaran luar segitiga ABC
>R=getCircleRadius(c); // jari2 lingkaran luar 
>O=getCircleCenter(c); // titik pusat lingkaran c 
>plotPoint(O,"O"); // gambar titik "O"
>plotCircle(c,"Lingkaran luar segitiga ABC"):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-002.png
% Tampilkan koordinat titik pusat dan jari-jari lingkaran luar.
>O, R
[1.16667,  1.16667]
1.17851130198
% Sekarang akan digambar lingkaran dalam segitiga ABC. Titik pusat lingkaran dalam adalah
% titik potong garis-garis bagi sudut.
>l=angleBisector(A,C,B); // garis bagi <ACB
>g=angleBisector(C,A,B); // garis bagi <CAB
>P=lineIntersection(l,g) // titik potong kedua garis bagi sudut
[0.86038,  0.86038]
% Tambahkan semua ke plot.
>color(5); plotLine(l); plotLine(g); color(1); // gambar kedua garis bagi sudut
>plotPoint(P,"P"); // gambar titik potongnya
>r=norm(P-projectToLine(P,lineThrough(A,B))) // jari-jari lingkaran dalam
0.509653732104
>plotCircle(circleWithCenter(P,r),"Lingkaran dalam segitiga ABC"): // gambar lingkaran dalam
 %image% EMT4Geometry_Shelly Ermawati_22305141002-003.png
% ** Latihan
% 
% 1. Tentukan ketiga titik singgung lingkaran dalam dengan sisi-sisi
% segitiga ABC.
%% 2. Gambar segitiga dengan titik-titik sudut ketiga titik singgung
% tersebut.
%% 3. Tunjukkan bahwa garis bagi sudut yang ke tiga juga melalui titik
% pusat lingkaran dalam.
%% 4. Gambar jari-jari lingkaran dalam.
% 
% Jawab:
%% 1. Tentukan ketiga titik singgung lingkaran dalam dengan sisi-sisi
% segitiga ABC.
%% Titik singgung garis BC dengan lingkaran dalam.
>s=lineThrough(B,C)
[-1,  2,  2]
>m=circleWithCenter(P,r)
[0.86038,  0.86038,  0.509654]
>S=lineCircleIntersections(s,m)
[0.632456,  1.31623]
>
% Titik singgung garis AC dengan lingkaran dalam.
>p=lineThrough(A,C)
[-2,  1,  -2]
>Q=lineCircleIntersections(p,m)
[1.31623,  0.632456]
% Titik singgung garis AB dengan lingkaran dalam.
> q=lineThrough(A,B)
[-1,  -1,  -1]
>L=lineCircleIntersections(q,m)
[0.5,  0.5]
% Jadi titik singgung lingkaran dalam dengan sisi-sisi segitiga adalah
% (0.632456, 1.31623), (1.31632, 0.632456), (0.5, 0.5).
% 
% 2. Gambar segitiga dengan titik-titik sudut ketiga titik singgung
% tersebut.
>plotSegment(S,Q,"a");
>plotSegment(S,L,"b");
>plotSegment(L,Q,"c"):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-004.png
% 3. Tunjukkan bahwa garis bagi sudut yang ke tiga juga melalui titik
% pusat lingkaran dalam.
> P, r
[0.86038,  0.86038]
0.509653732104
>k=angleBisector(A,B,C)
[-0.264911,  -1.63246,  -1.63246]
>color(2); plotLine(k):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-005.png
% 4. Gambar jari-jari lingkaran dalam.
>plotSegment(P,L,"r"):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-006.png
>
% * Contoh 2: Geometri Smbolik
% 
% Kita dapat menghitung geometri tepat dan simbolis menggunakan Maxima.
% 
% Geometri file.e menyediakan fungsi yang sama (dan lebih banyak lagi)
% di Maxima. Namun, sekarang kita dapat menggunakan perhitungan
% simbolik.
>A &= [1,0]; B &= [0,1]; C &= [2,2]; // menentukan tiga titik A, B, C
% Fungsi garis dan lingkaran bekerja seperti fungsi Euler, tetapi
% menyediakan penghitungan simbolik.
>c &= lineThrough(B,C) // c=BC

                             [- 1, 2, 2]

% Kita bisa mendapatkan persamaan untuk sebuah garis dengan mudah.
>$getLineEquation(c,x,y), $solve(%,y) | expand // persamaan garis c
 %image% EMT4Geometry_Shelly Ermawati_22305141002-007.png
% // latex: \left[ y=\frac{x}{2}+1 \right] 
 %image% EMT4Geometry_Shelly Ermawati_22305141002-008.png
>$getLineEquation(lineThrough(A,[x1,y1]),x,y) // persamaan garis melalui A dan (x1, y1)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-009.png
% // latex: \left({\it x_1}-1\right)\,y-x\,{\it y_1}=-{\it y_1}
>h &= perpendicular(A,lineThrough(B,C)) // h melalui A tegak lurus BC

                              [2, 1, 2]

>Q &= lineIntersection(c,h) // Q titik potong garis c=BC dan h

                                 2  6
                                [-, -]
                                 5  5

>$projectToLine(A,lineThrough(B,C)) // proyeksi A pada BC
 %image% EMT4Geometry_Shelly Ermawati_22305141002-010.png
% // latex: \left[ \frac{2}{5} , \frac{6}{5} \right] 
>$distance(A,Q) // jarak AQ
 %image% EMT4Geometry_Shelly Ermawati_22305141002-011.png
% // latex: \frac{3}{\sqrt{5}}
>cc &= circleThrough(A,B,C); $cc // (titik pusat dan jari-jari) lingkaran melalui A, B, C
 %image% EMT4Geometry_Shelly Ermawati_22305141002-012.png
% // latex: \left[ \frac{7}{6} , \frac{7}{6} , \frac{5}{3\,\sqrt{2}} \right] 
>r&=getCircleRadius(cc); $r , $float(r) // tampilkan nilai jari-jari
 %image% EMT4Geometry_Shelly Ermawati_22305141002-013.png
% // latex: 1.178511301977579
 %image% EMT4Geometry_Shelly Ermawati_22305141002-014.png
>$computeAngle(A,C,B) // nilai <ACB
 %image% EMT4Geometry_Shelly Ermawati_22305141002-015.png
% // latex: \arccos \left(\frac{4}{5}\right)
>$solve(getLineEquation(angleBisector(A,C,B),x,y),y)[1] // persamaan garis bagi <ACB
 %image% EMT4Geometry_Shelly Ermawati_22305141002-016.png
% // latex: y=x
>P &= lineIntersection(angleBisector(A,C,B),angleBisector(C,B,A)); $P // titik potong 2 garis bagi sudut
 %image% EMT4Geometry_Shelly Ermawati_22305141002-017.png
% // latex: \left[ \frac{\sqrt{2}\,\sqrt{5}+2}{6} , \frac{\sqrt{2}\,\sqrt{5}+2  }{6} \right] 
>P() // hasilnya sama dengan perhitungan sebelumnya
[0.86038,  0.86038]
% ** Garis dan Lingkaran yang Berpotongan
% 
% Tentu saja, kita juga bisa memotong garis dengan lingkaran, dan
% lingkaran dengan lingkaran.
>A &:= [1,0]; c=circleWithCenter(A,4);
>B &:= [1,2]; C &:= [2,1]; l=lineThrough(B,C);
>setPlotRange(5); plotCircle(c); plotLine(l);
% Perpotongan garis dengan lingkaran mengembalikan dua titik dan jumlah
% titik perpotongan.
>{P1,P2,f}=lineCircleIntersections(l,c);
>P1, P2,
[4.64575,  -1.64575]
[-0.645751,  3.64575]
>plotPoint(P1); plotPoint(P2):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-018.png
% Hal yang sama di Maxima.
>c &= circleWithCenter(A,4) // lingkaran dengan pusat A jari-jari 4

                              [1, 0, 4]

>l &= lineThrough(B,C) // garis l melalui B dan C

                              [1, 1, 3]

>$lineCircleIntersections(l,c) | radcan, // titik potong lingkaran c dan garis l
 %image% EMT4Geometry_Shelly Ermawati_22305141002-019.png
% // latex: \left[ \left[ \sqrt{7}+2 , 1-\sqrt{7} \right]  , \left[ 2-\sqrt{7}   , \sqrt{7}+1 \right]  \right] 
% 
% Akan ditunjukkan bahwa sudut-sudut yang menghadap bsuusr yang sama adalah sama besar.
>C=A+normalize([-2,-3])*4; plotPoint(C); plotSegment(P1,C); plotSegment(P2,C);
>degprint(computeAngle(P1,C,P2))
69°17'42.68''
>C=A+normalize([-4,-3])*4; plotPoint(C); plotSegment(P1,C); plotSegment(P2,C);
>degprint(computeAngle(P1,C,P2))
69°17'42.68''
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-020.png
% ** Garis Sumbu
% 
% Berikut adalah langkah-langkah menggambar garis sumbu ruas garis AB:
% 
% 1. Gambar lingkaran dengan pusat A melalui B.
%% 2. Gambar lingkaran dengan pusat B melalui A.
%% 3. Tarik garis melallui kedua titik potong kedua lingkaran tersebut. Garis ini merupakan
% garis sumbu (melalui titik tengah dan tegak lurus) AB.
>A=[2,2]; B=[-1,-2];
>c1=circleWithCenter(A,distance(A,B));
>c2=circleWithCenter(B,distance(A,B));
>{P1,P2,f}=circleCircleIntersections(c1,c2);
>l=lineThrough(P1,P2);
>setPlotRange(5); plotCircle(c1); plotCircle(c2);
>plotPoint(A); plotPoint(B); plotSegment(A,B); plotLine(l):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-021.png
% Selanjutnya, kita melakukan hal yang sama di Maxima dengan koordinat
% umum.
>A &= [a1,a2]; B &= [b1,b2];
>c1 &= circleWithCenter(A,distance(A,B));
>c2 &= circleWithCenter(B,distance(A,B));
>P &= circleCircleIntersections(c1,c2); P1 &= P[1]; P2 &= P[2];
% Persamaan untuk persimpangan cukup terlibat. Tapi kita bisa
% menyederhanakan, jika kita menyelesaikan y.
>g &= getLineEquation(lineThrough(P1,P2),x,y);
>$solve(g,y)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-022.png
% // latex: \left[ y=\frac{-\left(2\,{\it b_1}-2\,{\it a_1}\right)\,x+{\it b_2}  ^2+{\it b_1}^2-{\it a_2}^2-{\it a_1}^2}{2\,{\it b_2}-2\,{\it a_2}}   \right] 
% Ini memang sama dengan tengah tegak lurus, yang dihitung dengan cara
% yang sama sekali berbeda.
>$solve(getLineEquation(middlePerpendicular(A,B),x,y),y)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-023.png
% // latex: \left[ y=\frac{-\left(2\,{\it b_1}-2\,{\it a_1}\right)\,x+{\it b_2}  ^2+{\it b_1}^2-{\it a_2}^2-{\it a_1}^2}{2\,{\it b_2}-2\,{\it a_2}}   \right] 
>h &=getLineEquation(lineThrough(A,B),x,y);
>$solve(h,y)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-024.png
% // latex: \left[ y=\frac{\left({\it b_2}-{\it a_2}\right)\,x-{\it a_1}\,  {\it b_2}+{\it a_2}\,{\it b_1}}{{\it b_1}-{\it a_1}} \right] 
% Perhatikan hasil kali gradien garis g dan h adalah:
% 
% latex: \frac{-(b_1-a_1)}{(b_2-a_2)}\times \frac{(b_2-a_2)}{(b_1-a_1)} = -1.
% %image% EMT4Geometry_Shelly Ermawati_22305141002-025.png
% // latex: \frac{-(b_1-a_1)}{(b_2-a_2)}\times \frac{(b_2-a_2)}{(b_1-a_1)} = -1.
% 
% Artinya kedua garis tegak lurus.
>
% * Contoh 3: Rumus Heron
% 
% Rumus Heron menyatakan bahwa luas segitiga dengan panjang sisi-sisi a,
% b dan c adalah:
% 
% latex: L = \sqrt{s(s-a)(s-b)(s-c)}\quad \text{ dengan } s=(a+b+c)/2.
% %image% EMT4Geometry_Shelly Ermawati_22305141002-026.png
% // latex: L = \sqrt{s(s-a)(s-b)(s-c)}\quad \text{ dengan } s=(a+b+c)/2.
% 
% Untuk membuktikan hal ini kita misalkan C(0,0), B(a,0) dan A(x,y),
% b=AC, c=AB. Luas segitiga ABC adalah
% 
% latex: L_{\triangle ABC}=\frac{1}{2}a\times y.
% %image% EMT4Geometry_Shelly Ermawati_22305141002-027.png
% // latex: L_{\triangle ABC}=\frac{1}{2}a\times y.
% 
% Nilai y didapat dengan menyelesaikan sistem persamaan:
% 
% latex: x^2+y^2=b^2, \quad (x-a)^2+y^2=c^2.
% %image% EMT4Geometry_Shelly Ermawati_22305141002-028.png
% // latex: x^2+y^2=b^2, \quad (x-a)^2+y^2=c^2.
>sol &= solve([x^2+y^2=b^2,(x-a)^2+y^2=c^2],[x,y])

                                  []

% Ekstrak solusi y
>ysol &= y with sol[2][2]: $ysol

                                 ysol

% Kita mendapatkan formula Heron.
>function H(a,b,c) &= sqrt(factor((ysol*a/2)^2)); $'H(a,b,c)=H(a,b,c)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-029.png
% // latex: H\left(a , b , \left[ 1 , 0 , 4 \right] \right)=\frac{\left| a  \right| \,\left| {\it ysol}\right| }{2}
% Tentu saja, setiap segitiga persegi panjang adalah kasus yang
% terkenal.
>$H(3,4,5) //luas segitiga siku-siku dengan panjang sisi 3, 4, 5
 %image% EMT4Geometry_Shelly Ermawati_22305141002-030.png
% // latex: \frac{3\,\left| {\it ysol}\right| }{2}
% Dan jelas juga, bahwa ini adalah segitiga dengan luas maksimal dan
% kedua sisinya 3 dan 4.
>$aspect (1.5); plot2d(&H(3,4,x),1,7): // Kurva luas segitiga sengan panjang sisi 3, 4, x (1<= x <=7)
Wrong argument!

Cannot combine a symbolic expression here.
Did you want to create a symbolic expression?
Then start with &.

This function can only use real or complex values!
Error in abs
Error in expression: 3*abs(ysol)/2
 %ploteval:
    y0=f$(x[1],args());
adaptiveevalone:
    s=%ploteval(g$,t;args());
Try "trace errors" to inspect local variables after errors.
plot2d:
    dw/n,dw/n^2,dw/n,auto;args());
% Kasus umum juga berfungsi.
>$solve(diff(H(a,b,c)^2,c)=0,c);
Maxima said:
diff: second argument must be a variable; found [1,0,4]
 -- an error. To debug this try: debugmode(true);

Error in:
 $solve(diff(H(a,b,c)^2,c)=0,c); ...
                              ^
% Sekarang mari kita cari himpunan semua titik di mana b + c = d untuk
% beberapa konstanta d. Diketahui bahwa ini adalah elips.
>s1 &= subst(d-c,b,sol[2]); $s1
Maxima said:
part: invalid index of list or matrix.
 -- an error. To debug this try: debugmode(true);

Error in:
s1 &= subst(d-c,b,sol[2]); $s1 ...
                         ^
% Dan membuat persamaan seperti ini
>function fx(a,c,d) &= rhs(s1[1]); $fx(a,c,d), function fy(a,c,d) &= rhs(s1[2]); $fy(a,c,d)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-031.png
% // latex: 0
 %image% EMT4Geometry_Shelly Ermawati_22305141002-032.png
% Sekarang kita bisa menggambar setnya. Sisi b bervariasi dari 1 hingga
% 4. Diketahui bahwa kita mendapatkan elips.
>aspect(1); plot2d(&fx(3,x,5),&fy(3,x,5),xmin=1,xmax=4,square=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-033.png
% Kita dapat memeriksa persamaan umum elips ini, yaitu.
% 
% latex: \frac{(x-x_m)^2}{u^2}+\frac{(y-y_m)}{v^2}=1,
% %image% EMT4Geometry_Shelly Ermawati_22305141002-034.png
% // latex: \frac{(x-x_m)^2}{u^2}+\frac{(y-y_m)}{v^2}=1,
% 
% di mana (xm,ym) adalah pusat, dan u dan v adalah setengah sumbu.
>$ratsimp((fx(a,c,d)-a/2)^2/u^2+fy(a,c,d)^2/v^2 with [u=d/2,v=sqrt(d^2-a^2)/2])
 %image% EMT4Geometry_Shelly Ermawati_22305141002-035.png
% // latex: \frac{a^2}{d^2}
% Kita melihat bahwa tinggi dan luas segitiga adalah maksimal untuk x =
% 0. Jadi luas segitiga dengan a + b + c = d adalah maksimal, jika sama
% sisi. Kami ingin mendapatkan ini secara analitis.
>eqns &= [diff(H(a,b,d-(a+b))^2,a)=0,diff(H(a,b,d-(a+b))^2,b)=0]; $eqns
 %image% EMT4Geometry_Shelly Ermawati_22305141002-036.png
% // latex: \left[ \frac{a\,{\it ysol}^2}{2}=0 , 0=0 \right] 
% Kami mendapatkan beberapa minima, yang termasuk dalam segitiga dengan
% satu sisi 0, dan solusi a=b=c=d/3.
>$solve(eqns,[a,b])
 %image% EMT4Geometry_Shelly Ermawati_22305141002-037.png
% // latex: \left[ \left[ a=0 , b={\it \%r_2} \right]  \right] 
% Ada juga metode Lagrange, memaksimalkan H(a,b,c)^2 terhadap a+b+d=d.
>&solve([diff(H(a,b,c)^2,a)=la,diff(H(a,b,c)^2,b)=la, ...
>   diff(H(a,b,c)^2,c)=la,a+b+c=d],[a,b,c,la])
Maxima said:
diff: second argument must be a variable; found [1,0,4]
 -- an error. To debug this try: debugmode(true);

Error in:
... la,    diff(H(a,b,c)^2,c)=la,a+b+c=d],[a,b,c,la]) ...
                                                     ^
% Kita bisa membuat plot situasinya.
>
% Pertama, atur poin di Maxima
>A &= at([x,y],sol[2]); $A
Maxima said:
part: invalid index of list or matrix.
 -- an error. To debug this try: debugmode(true);

Error in:
A &= at([x,y],sol[2]); $A ...
                     ^
>B &= [0,0]; $B, C &= [a,0]; $C
 %image% EMT4Geometry_Shelly Ermawati_22305141002-038.png
% // latex: \left[ a , 0 \right] 
 %image% EMT4Geometry_Shelly Ermawati_22305141002-039.png
% Kemudian atur rentang plot, dan plot poinnya.
>setPlotRange(0,5,-2,3); ...
>a=4; b=3; c=2; ...
>plotPoint(mxmeval("B"),"B"); plotPoint(mxmeval("C"),"C"); ...
>plotPoint(mxmeval("A"),"A"):
Variable a1 not found!
Use global variables or parameters for string evaluation.
Error in Evaluate, superfluous characters found.
Try "trace errors" to inspect local variables after errors.
mxmeval:
    return evaluate(mxm(s));
Error in:
... otPoint(mxmeval("C"),"C"); plotPoint(mxmeval("A"),"A"): ...
                                                     ^
% Plot segmennya.
>plotSegment(mxmeval("A"),mxmeval("C")); ...
>plotSegment(mxmeval("B"),mxmeval("C")); ...
>plotSegment(mxmeval("B"),mxmeval("A")):
Variable a1 not found!
Use global variables or parameters for string evaluation.
Error in Evaluate, superfluous characters found.
Try "trace errors" to inspect local variables after errors.
mxmeval:
    return evaluate(mxm(s));
Error in:
plotSegment(mxmeval("A"),mxmeval("C")); plotSegment(mxmeval("B ...
                        ^
% Hitung tengah tegak lurus di Maxima.
>h &= middlePerpendicular(A,B); g &= middlePerpendicular(B,C);
% Dan bagian tengah dari keliling.
>U &= lineIntersection(h,g);
% Kita mendapatkan rumus untuk jari-jari lingkaran.
>&assume(a>0,b>0,c>0); $distance(U,B) | radcan
 %image% EMT4Geometry_Shelly Ermawati_22305141002-040.png
% // latex: \frac{\sqrt{{\it a_2}^2+{\it a_1}^2}\,\sqrt{{\it a_2}^2+{\it a_1}^2  -2\,a\,{\it a_1}+a^2}}{2\,\left| {\it a_2}\right| }
% Mari kita tambahkan ini ke plot.
>plotPoint(U()); ...
>plotCircle(circleWithCenter(mxmeval("U"),mxmeval("distance(U,C)"))):
Variable a2 not found!
Use global variables or parameters for string evaluation.
Error in ^
Error in expression: [a/2,(a2^2+a1^2-a*a1)/(2*a2)]
Error in:
plotPoint(U()); plotCircle(circleWithCenter(mxmeval("U"),mxmev ...
             ^
% Menggunakan geometri, kita mendapatkan rumus sederhana
% 
% latex: \frac{a}{\sin(\alpha)}=2r
% 
% untuk radius. Kita dapat memeriksa, apakah ini benar dengan Maxima.
% Maxima akan menfaktorkannya hanya jika kita mengkuadratkannya.
>$c^2/sin(computeAngle(A,B,C))^2  | factor
 %image% EMT4Geometry_Shelly Ermawati_22305141002-041.png
% // latex: \left[ \frac{{\it a_2}^2+{\it a_1}^2}{{\it a_2}^2} , 0 , \frac{16\,  \left({\it a_2}^2+{\it a_1}^2\right)}{{\it a_2}^2} \right] 
>
% * Contoh 4: Garis Euler dan Parabola
% 
% Garis euler adalah garis yang ditentukan dari segitiga yang tidak sama
% sisi. Ini adalah garis tengah segitiga, dan melewati beberapa titik
% penting yang ditentukan dari segitiga, termasuk pusat ortosentrum,
% sirkumenter, pusat massa, titik Exeter, dan pusat lingkaran sembilan
% titik segitiga.
% 
% Untuk demonstrasi, kami menghitung dan memplot garis Euler dalam
% segitiga.
% 
% Pertama, kami menentukan sudut segitiga di Euler. Kami menggunakan
% definisi, yang terlihat dalam ekspresi simbolik.
>A::=[-1,-1]; B::=[2,0]; C::=[1,2];
% Untuk memplot objek geometris, kami menyiapkan area plot, dan
% menambahkan poin ke dalamnya. Semua plot objek geometris ditambahkan
% ke plot saat ini.
>setPlotRange(3); plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C");
% Kita juga bisa menambahkan sisi segitiga.
>plotSegment(A,B,""); plotSegment(B,C,""); plotSegment(C,A,""):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-042.png
% Berikut adalah luas segitiga menggunakan rumus determinan. Tentu saja
% kita harus mengambil nilai absolut dari hasil ini.
>$areaTriangle(A,B,C)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-043.png
% // latex: -\frac{7}{2}
% Kita dapat menghitung koefisien dari sisi c.
>c &= lineThrough(A,B)

                            [- 1, 3, - 2]

% Dan juga dapatkan rumus untuk baris ini.
>$getLineEquation(c,x,y)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-044.png
% // latex: 3\,y-x=-2
% Untuk bentuk Hesse, kita perlu menentukan titik, sehingga titik
% tersebut berada di sisi positif dari bentuk Hesse. Memasukkan titik
% menghasilkan jarak positif ke garis.
>$getHesseForm(c,x,y,C), $at(%,[x=C[1],y=C[2]])
 %image% EMT4Geometry_Shelly Ermawati_22305141002-045.png
% // latex: \frac{7}{\sqrt{10}}
 %image% EMT4Geometry_Shelly Ermawati_22305141002-046.png
% Sekarang kita menghitung sirkit ABC.
>LL &= circleThrough(A,B,C); $getCircleEquation(LL,x,y)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-047.png
% // latex: \left(y-\frac{5}{14}\right)^2+\left(x-\frac{3}{14}\right)^2=\frac{  325}{98}
>O &= getCircleCenter(LL); $O
 %image% EMT4Geometry_Shelly Ermawati_22305141002-048.png
% // latex: \left[ \frac{3}{14} , \frac{5}{14} \right] 
% Plot lingkaran dan pusatnya. Cu dan U adalah simbolik. Kami
% mengevaluasi ekspresi ini untuk Euler.
>plotCircle(LL()); plotPoint(O(),"O"):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-049.png
% Kita dapat menghitung perpotongan ketinggian di ABC (orthocenter)
% secara numerik dengan perintah berikut.
>H &= lineIntersection(perpendicular(A,lineThrough(C,B)),...
>  perpendicular(B,lineThrough(A,C))); $H
 %image% EMT4Geometry_Shelly Ermawati_22305141002-050.png
% // latex: \left[ \frac{11}{7} , \frac{2}{7} \right] 
% Sekarang kita dapat menghitung garis Euler dari segitiga tersebut.
>el &= lineThrough(H,O); $getLineEquation(el,x,y)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-051.png
% // latex: -\frac{19\,y}{14}-\frac{x}{14}=-\frac{1}{2}
% Tambahkan ke plot kita.
>plotPoint(H(),"H"); plotLine(el(),"Garis Euler"):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-052.png
% Pusat gravitasi harus berada di garis ini.
>M &= (A+B+C)/3; $getLineEquation(el,x,y) with [x=M[1],y=M[2]]
 %image% EMT4Geometry_Shelly Ermawati_22305141002-053.png
% // latex: -\frac{1}{2}=-\frac{1}{2}
>plotPoint(M(),"M"): // titik berat
 %image% EMT4Geometry_Shelly Ermawati_22305141002-054.png
% Teorinya mengatakan bahwa MH=2*MO. Kita perlu menyederhanakan dengan
% radcan untuk mencapai ini.
>$distance(M,H)/distance(M,O)|radcan
 %image% EMT4Geometry_Shelly Ermawati_22305141002-055.png
% // latex: 2
% Fungsinya termasuk fungsi untuk sudut juga.
>$computeAngle(A,C,B), degprint(%())
 %image% EMT4Geometry_Shelly Ermawati_22305141002-056.png
% // latex: \arccos \left(\frac{4}{\sqrt{5}\,\sqrt{13}}\right)
60°15'18.43''
% Persamaan untuk pusat lingkaran tidak terlalu bagus.
>Q &= lineIntersection(angleBisector(A,C,B),angleBisector(C,B,A))|radcan; $Q
 %image% EMT4Geometry_Shelly Ermawati_22305141002-057.png
% // latex: \left[ \frac{\left(2^{\frac{3}{2}}+1\right)\,\sqrt{5}\,\sqrt{13}-15  \,\sqrt{2}+3}{14} , \frac{\left(\sqrt{2}-3\right)\,\sqrt{5}\,\sqrt{  13}+5\,2^{\frac{3}{2}}+5}{14} \right] 
% Mari kita hitung juga ekspresi jari-jari lingkaran yang tertulis.
>r &= distance(Q,projectToLine(Q,lineThrough(A,B)))|ratsimp; $r
 %image% EMT4Geometry_Shelly Ermawati_22305141002-058.png
% // latex: \frac{\sqrt{\left(-41\,\sqrt{2}-31\right)\,\sqrt{5}\,\sqrt{13}+115  \,\sqrt{2}+614}}{7\,\sqrt{2}}
>LD &=  circleWithCenter(Q,r); // Lingkaran dalam
% Mari kita tambahkan ini ke plot.
>color(5); plotCircle(LD()):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-059.png
% ** Parabola
% 
% Selanjutnya akan dicari persamaan tempat kedudukan titik-titik yang berjarak sama ke titik C
% dan ke garis AB.
>p &= getHesseForm(lineThrough(A,B),x,y,C)-distance([x,y],C); $p='0
 %image% EMT4Geometry_Shelly Ermawati_22305141002-060.png
% // latex: \frac{3\,y-x+2}{\sqrt{10}}-\sqrt{\left(2-y\right)^2+\left(1-x  \right)^2}=0
% Persamaan tersebut dapat digambar menjadi satu dengan gambar sebelumnya.
>plot2d(p,level=0,add=1,contourcolor=6):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-061.png
% Ini seharusnya menjadi beberapa fungsi, tetapi pemecah default Maxima
% dapat menemukan solusi hanya, jika persamaan kita kuadratkan.
% Akibatnya, kami mendapatkan solusi palsu.
>akar &= solve(getHesseForm(lineThrough(A,B),x,y,C)^2-distance([x,y],C)^2,y)

        [y = - 3 x - sqrt(70) sqrt(9 - 2 x) + 26, 
                              y = - 3 x + sqrt(70) sqrt(9 - 2 x) + 26]

% Solusi pertama adalah
% 
% maxima: akar[1]
% 
% Menambahkan solusi pertama ke pertunjukkan plot, bahwa itu memang
% jalan yang kita cari. Teori mengatakan kepada kita bajwa itu adalah
% parabola yang diputar.
>plot2d(&rhs(akar[1]),add=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-062.png
>function g(x) &= rhs(akar[1]); $'g(x)= g(x)// fungsi yang mendefinisikan kurva di atas
 %image% EMT4Geometry_Shelly Ermawati_22305141002-063.png
% // latex: g\left(x\right)=-3\,x-\sqrt{70}\,\sqrt{9-2\,x}+26
>T &=[-1, g(-1)]; // ambil sebarang titik pada kurva tersebut
>dTC &= distance(T,C); $fullratsimp(dTC), $float(%) // jarak T ke C
 %image% EMT4Geometry_Shelly Ermawati_22305141002-064.png
% // latex: 2.135605779339061
 %image% EMT4Geometry_Shelly Ermawati_22305141002-065.png
>U &= projectToLine(T,lineThrough(A,B)); $U // proyeksi T pada garis AB 
 %image% EMT4Geometry_Shelly Ermawati_22305141002-066.png
% // latex: \left[ \frac{80-3\,\sqrt{11}\,\sqrt{70}}{10} , \frac{20-\sqrt{11}\,  \sqrt{70}}{10} \right] 
>dU2AB &= distance(T,U); $fullratsimp(dU2AB), $float(%) // jatak T ke AB
 %image% EMT4Geometry_Shelly Ermawati_22305141002-067.png
% // latex: 2.135605779339061
 %image% EMT4Geometry_Shelly Ermawati_22305141002-068.png
% Ternyata jarak T ke C sama dengan jarak T ke AB. Coba Anda pilih titik T yang lain dan
% ulangi perhitungan-perhitungan di atas untuk menunjukkan bahwa hasilnya juga sama.
>
% 
% * Contoh 5: Trigonometri Rasional
% 
% Ini terinspirasi oleh ceramah N.J.Wildberger. Dalam bukunya "Proporsi
% Agung", Wildberger mengusulkan untuk menggantikan pengertian klasik
% tentang jarak dan sudut dengan kuadransi dan penyebaran. Dengan
% menggunakan ini, memang mungkin untuk menghindari fungsi trigonometri
% dalam banyak contoh, dan tetap "rasional".
% 
% Berikut ini, saya memperkenalkan konsep, dan memecahkan beberapa
% masalah. Saya menggunakan perhitungan simbolik Maxima di sini, yang
% menyembunyikan keuntungan utama dari trigonometri rasional bahwa
% perhitungan dapat dilakukan dengan kertas dan pensil saja. Anda
% diundang untuk memeriksa hasil tanpa komputer.
% 
% Intinya adalah bahwa perhitungan rasional simbolis sering kali
% menghasilkan hasil yang sederhana. Sebaliknya, trigonometri klasik
% menghasilkan hasil trigonometri yang rumit, yang mengevaluasi ke
% pendekatan numerik saja.
>load geometry;
% Untuk pendahuluan pertama, kami menggunakan segitiga persegi panjang
% dengan proporsi Mesir terkenal 3, 4 dan 5. Perintah berikut adalah
% perintah Euler untuk memplot geometri bidang yang terdapat dalam file
% Euler "geometry.e".
>C&:=[0,0]; A&:=[4,0]; B&:=[0,3]; ...
>setPlotRange(-1,5,-1,5); ...
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"); ...
>plotSegment(B,A,"c"); plotSegment(A,C,"b"); plotSegment(C,B,"a"); ...
>insimg(30);
 %image% EMT4Geometry_Shelly Ermawati_22305141002-069.png
% Tentu saja,
% 
% latex: \sin(w_a)=\frac{a}{c},
% %image% EMT4Geometry_Shelly Ermawati_22305141002-070.png
% // latex: \sin(w_a)=\frac{a}{c},
% 
% di mana wa adalah sudut di A. Cara biasa untuk menghitung sudut ini,
% adalah dengan melakukan invers dari fungsi sinus. Hasilnya adalah
% sudut yang tidak dapat dicerna, yang hanya dapat dicetak secara
% perkiraan.
>wa := arcsin(3/5); degprint(wa)
36°52'11.63''
% Trigonometri rasional mencoba menghindari hal ini.
% 
% Pengertian pertama dari trigonometri rasional adalah kuadran, yang
% menggantikan jarak. Faktanya, itu hanyalah kuadrat jarak. Berikut ini,
% a, b, dan c menunjukkan kuadran sisi-sisinya.
% 
% Teorema Pythogoras menjadi a+b=c lalu.
>a &= 3^2; b &= 4^2; c &= 5^2; &a+b=c

                               25 = 25

% Gagasan kedua dari trigonometri rasional adalah penyebarannya. Spread
% mengukur bukaan antar baris. Ini adalah 0, jika garis sejajar, dan 1,
% jika garis persegi panjang. Ini adalah kuadrat dari sinus sudut antara
% dua garis.
% 
% Penyebaran garis AB dan AC pada gambar di atas didefinisikan sebagai
% 
% latex: s_a = \sin(\alpha)^2 = \frac{a}{c},
% %image% EMT4Geometry_Shelly Ermawati_22305141002-071.png
% // latex: s_a = \sin(\alpha)^2 = \frac{a}{c},
% 
% di mana a dan c adalah kuadrat dari segitiga persegi panjang mana pun
% dengan satu sudut di A.
>sa &= a/c; $sa
 %image% EMT4Geometry_Shelly Ermawati_22305141002-072.png
% // latex: \frac{9}{25}
% Ini lebih mudah dihitung daripada sudut, tentu saja. Tetapi Anda
% kehilangan properti yang sudut dapat ditambahkan dengan mudah.
% 
% Tentu saja, kita dapat mengubah nilai perkiraan sudut wa menjadi
% sprad, dan mencetaknya sebagai pecahan.
>fracprint(sin(wa)^2)
9/25
% Hukum cosinus dari trgonometri klasik diterjemahkan menjadi "hukum
% silang" berikut.
% 
% latex: (c+b-a)^2 = 4 b c \, (1-s_a)
% %image% EMT4Geometry_Shelly Ermawati_22305141002-073.png
% // latex: (c+b-a)^2 = 4 b c \, (1-s_a)
% 
% Di sini a, b, dan c adalah kuadran dari sisi-sisi segitiga, dan sa
% adalah sebaran di sudut A. Sisi a, seperti biasa, berlawanan dengan
% sudut A.
% 
% Hukum ini diimplementasikan dalam file geometry.e yang kami muat ke
% Euler.
>$crosslaw(aa,bb,cc,saa)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-074.png
% // latex: \left[ \left({\it bb}-{\it aa}+\frac{7}{6}\right)^2 , \left(  {\it bb}-{\it aa}+\frac{7}{6}\right)^2 , \left({\it bb}-{\it aa}+  \frac{5}{3\,\sqrt{2}}\right)^2 \right] =\left[ \frac{14\,{\it bb}\,  \left(1-{\it saa}\right)}{3} , \frac{14\,{\it bb}\,\left(1-{\it saa}  \right)}{3} , \frac{5\,2^{\frac{3}{2}}\,{\it bb}\,\left(1-{\it saa}  \right)}{3} \right] 
% Dalam kasus kami, kita mendapatkan
>$crosslaw(a,b,c,sa)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-075.png
% // latex: 1024=1024
% Mari kita gunakan crosslaw ini untuk mencari sebaran di A. Untuk
% melakukan ini, kita menghasilkan crosslaw untuk kuadran a, b, dan c,
% dan menyelesaikannya untuk sebaran yang tidak diketahui sa.
% 
% Anda dapat melakukan ini dengan tangan dengan mudah, tetapi saya
% menggunakan Maxima. Tentu saja, kami mendapatkan hasilnya, kami sudah
% mendapatkannya.
>$crosslaw(a,b,c,x), $solve(%,x)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-076.png
% // latex: \left[ x=\frac{9}{25} \right] 
 %image% EMT4Geometry_Shelly Ermawati_22305141002-077.png
% Kami sudah tahu ini. Definisi penyebaran adalah kasus khusus dari
% hukum lintas hukum.
% 
% Kita juga bisa menyelesaikan ini untuk umum a, b, c. Hasilnya adalah
% rumus yang menghitung sebaran sudut segitiga berdasarkan kuadran
% ketiga sisinya.
>$solve(crosslaw(aa,bb,cc,x),x)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-078.png
% // latex: \left[ \left[ \frac{168\,{\it bb}\,x+36\,{\it bb}^2+\left(-72\,  {\it aa}-84\right)\,{\it bb}+36\,{\it aa}^2-84\,{\it aa}+49}{36} ,   \frac{168\,{\it bb}\,x+36\,{\it bb}^2+\left(-72\,{\it aa}-84\right)  \,{\it bb}+36\,{\it aa}^2-84\,{\it aa}+49}{36} , \frac{15\,2^{\frac{  5}{2}}\,{\it bb}\,x+18\,{\it bb}^2+\left(-36\,{\it aa}-15\,2^{\frac{  3}{2}}\right)\,{\it bb}+18\,{\it aa}^2-15\,2^{\frac{3}{2}}\,{\it aa}  +25}{18} \right] =0 \right] 
% Kita bisa membuat fungsi dari hasilnya. Fungsi seperti itu sudah
% ditentukan dalam file geometry.e Euler.
>$spread(a,b,c)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-079.png
% // latex: \frac{9}{25}
% Sebagai contoh, kita bisa menggunakannya untuk menghitung sudut
% segitiga bersisi
% 
% latex: a, \quad a, \quad \frac{4a}{7}
% %image% EMT4Geometry_Shelly Ermawati_22305141002-080.png
% // latex: a, \quad a, \quad \frac{4a}{7}
% 
% Hasilnya rasional, yang tidak mudah didapat jika kita menggunakan
% trigonometri klasik.
>$spread(a,a,4*a/7)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-081.png
% // latex: \frac{6}{7}
% Ini adalah sudut dalam derajat.
>degprint(arcsin(sqrt(6/7)))
67°47'32.44''
% ** Contoh lain
% 
% Sekarang, mari kita coba contoh yang lebih canggih.
% 
% Kami mengatur tiga sudut segitiga sebagai berikut.
>A&:=[1,2]; B&:=[4,3]; C&:=[0,4]; ...
>setPlotRange(-1,5,1,7); ...
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"); ...
>plotSegment(B,A,"c"); plotSegment(A,C,"b"); plotSegment(C,B,"a"); ...
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-082.png
% Menggunakan Pythogoras, mudah untuk menghitung jarak antara dua titik.
% Saya pertama kali menggunakan jarak fungsi file Euler untuk geometri.
% Jarak fungsi menggunakan geometri klasik.
>$distance(A,B)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-083.png
% // latex: \sqrt{10}
% Euler juga memiliki fungsi kuadrans antara dua titik.
% 
% Dalam contoh berikut, karena c + b bukan a, segitiga tidak persegi
% panjang.
>c &= quad(A,B); $c, b &= quad(A,C); $b, a &= quad(B,C); $a,
 %image% EMT4Geometry_Shelly Ermawati_22305141002-084.png
% // latex: 17
 %image% EMT4Geometry_Shelly Ermawati_22305141002-085.png
 %image% EMT4Geometry_Shelly Ermawati_22305141002-086.png
% Pertama, mari kita hitung sudut tradisional. Fungsi computeAngle
% menggunakan metode biasa berdasarkan perkalian titik dari dua vektor.
% Hasilnya adalah beberapa pendekatan floating point.
>wb &= computeAngle(A,B,C); $wb, $(wb/pi*180)()
 %image% EMT4Geometry_Shelly Ermawati_22305141002-087.png
% // latex: \arccos \left(\frac{11}{\sqrt{10}\,\sqrt{17}}\right)
32.4711922908
% Menggunakan pensil dan kertas, kita bisa melakukan hal yang sama
% dengan hukum silang. Kami memasukkan kuadran a, b, dan c ke dalam
% hukum silang dan menyelesaikan untuk x.
>$crosslaw(a,b,c,x), $solve(%,x),
 %image% EMT4Geometry_Shelly Ermawati_22305141002-088.png
% // latex: \left[ x=\frac{49}{50} \right] 
 %image% EMT4Geometry_Shelly Ermawati_22305141002-089.png
% Artinya, fungsi penyebaran yang didefinisikan dalam "geometry.e".
>sb &= spread(b,a,c); $sb
 %image% EMT4Geometry_Shelly Ermawati_22305141002-090.png
% // latex: \frac{49}{170}
% Maxima mendapatkan hasil yang sama dengan menggunakan trigonometri
% biasa, jika kita memaksakannya. Itu menyelesaikan istilah sin (arccos
% (...)) menjadi hasil pecahan. Kebanyakan siswa tidak dapat melakukan
% ini.
>$sin(computeAngle(A,B,C))^2
 %image% EMT4Geometry_Shelly Ermawati_22305141002-091.png
% // latex: \frac{49}{170}
% Setelah kita mendapatkan sebaran di B, kita bisa menghitung tinggi ha
% di sisi a. Ingat bahwa
% 
% latex: s_b=\frac{h_a}{c}
% 
% Menurut definisi.
>ha &= c*sb; $ha
 %image% EMT4Geometry_Shelly Ermawati_22305141002-092.png
% // latex: \frac{49}{17}
% Gambar berikut telah diproduksi dengan program geometri C.a.R., yang
% dapat menggambar kuadran dan menyebar.
% 
% gambar : (20) Rational_Geometry_CaR.png
% 
% Menurut definisi, panjang ha adalah akar kuadrat dari kuadrannya.
>$sqrt(ha)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-093.png
% // latex: \frac{7}{\sqrt{17}}
% Sekarang kita bisa menghitung luas segitiga. Jangan lupa, bahwa kita
% berurusan dengan kuadran!
>$sqrt(ha)*sqrt(a)/2
 %image% EMT4Geometry_Shelly Ermawati_22305141002-094.png
% // latex: \frac{7}{2}
% Rumus determinan yang biasa menghasilkan hasil yang sama.
>$areaTriangle(B,A,C)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-095.png
% // latex: \frac{7}{2}
% ** Formula Heron
% 
% Sekarang, mari kita selesaikan masalah ini secara umum!
>&remvalue(a,b,c,sb,ha);
% Pertama-tama kita menghitung spread di B untuk segitiga dengan sisi a,
% b, dan c. Kemudian kami menghitung luas area yang dikuadratkan
% ("kuadrea"?), Memfaktorkannya dengan Maxima, dan kami mendapatkan
% rumus Heron yang terkenal.
% 
% Memang, ini sulit dilakukan dengan pensil dan kertas.
>$spread(b^2,c^2,a^2), $factor(%*c^2*a^2/4)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-096.png
% // latex: \frac{\left(-c+b+a\right)\,\left(c-b+a\right)\,\left(c+b-a\right)\,  \left(c+b+a\right)}{16}
 %image% EMT4Geometry_Shelly Ermawati_22305141002-097.png
% ** Aturan Triple Spread
% 
% Kerugian dari spread adalah bahwa mereka tidak lagi hanya menambahkan
% sudut serupa.
% 
% Namun, tiga sebaran segitiga memenuhi aturan "penyebaran rangkap tiga"
% berikut.
>&remvalue(sa,sb,sc); $triplespread(sa,sb,sc)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-098.png
% // latex: \left({\it sc}+{\it sb}+{\it sa}\right)^2=2\,\left({\it sc}^2+  {\it sb}^2+{\it sa}^2\right)+4\,{\it sa}\,{\it sb}\,{\it sc}
% Aturan ini berlaku untuk tiga sudut yang bertambah menjadi 180°.
% 
% latex: \alpha+\beta+\gamma=\pi
% %image% EMT4Geometry_Shelly Ermawati_22305141002-099.png
% // latex: \alpha+\beta+\gamma=\pi
% 
% Sejak penyebaran
% 
% latex: \alpha, \pi-\alpha
% %image% EMT4Geometry_Shelly Ermawati_22305141002-100.png
% // latex: \alpha, \pi-\alpha
% 
% sama, aturan penyebaran tiga kali lipat juga benar, jika
% 
% latex: \alpha+\beta=\gamma
% %image% EMT4Geometry_Shelly Ermawati_22305141002-101.png
% // latex: \alpha+\beta=\gamma
% 
% Karena penyebaran sudut negatif adalah sama, aturan penyebaran tiga
% kali lipat juga berlaku, jika
% 
% latex: \alpha+\beta+\gamma=0
% %image% EMT4Geometry_Shelly Ermawati_22305141002-102.png
% // latex: \alpha+\beta+\gamma=0
% 
% Misalnya, kita dapat menghitung sebaran sudut 60°. Ini 3/4. Persamaan
% memiliki solusi kedua, di mana semua spread adalah 0.
>$solve(triplespread(x,x,x),x)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-103.png
% // latex: \left[ x=\frac{3}{4} , x=0 \right] 
% Sebaran 90° jelaslah 1. Jika dua sudut dijumlahkan menjadi 90°,
% penyebarannya menyelesaikan persamaan penyebaran rangkap tiga dengan
% a, b, 1. Dengan perhitungan berikut kita mendapatkan a+b=1.
>$triplespread(x,y,1), $solve(%,x)
 %image% EMT4Geometry_Shelly Ermawati_22305141002-104.png
% // latex: \left[ x=1-y \right] 
 %image% EMT4Geometry_Shelly Ermawati_22305141002-105.png
% Karena penyebaran 180°-t sama dengan penyebaran t, rumus penyebaran
% rangkap tiga juga berlaku, jika satu sudut adalah jumlah atau
% perbedaan dari dua sudut lainnya.
% 
% Jadi kita bisa menemukan sebaran sudut berlipat ganda. Perhatikan
% bahwa ada dua solusi lagi. Kami menjadikan ini sebuah fungsi.
>$solve(triplespread(a,a,x),x), function doublespread(a) &= factor(rhs(%[1]))
 %image% EMT4Geometry_Shelly Ermawati_22305141002-106.png
% // latex: \left[ x=4\,a-4\,a^2 , x=0 \right] 

                            - 4 (a - 1) a

% ** Pembagi Sudut
% 
% Ini situasinya, kita sudah tahu.
>C&:=[0,0]; A&:=[4,0]; B&:=[0,3]; ...
>setPlotRange(-1,5,-1,5); ...
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"); ...
>plotSegment(B,A,"c"); plotSegment(A,C,"b"); plotSegment(C,B,"a"); ...
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-107.png
% Mari kita hitung panjang bisektor sudut pada A. Tapi kita ingin
% menyelesaikannya untuk umum a, b, c.
>&remvalue(a,b,c);
% Jadi pertama-tama kita menghitung sebaran sudut terbagi di A,
% menggunakan rumus sebaran rangkap tiga.
% 
% Masalah dengan rumus ini muncul lagi. Ini memiliki dua solusi. Kami
% harus memilih yang benar. Solusi lainnya mengacu pada sudut terbagi
% 180°-wa.
>$triplespread(x,x,a/(a+b)), $solve(%,x), sa2 &= rhs(%[1]); $sa2
 %image% EMT4Geometry_Shelly Ermawati_22305141002-108.png
% // latex: \frac{-\sqrt{b}\,\sqrt{b+a}+b+a}{2\,b+2\,a}
 %image% EMT4Geometry_Shelly Ermawati_22305141002-109.png
 %image% EMT4Geometry_Shelly Ermawati_22305141002-110.png
% Mari kita periksa persegi panjang Mesir.
>$sa2 with [a=3^2,b=4^2]
 %image% EMT4Geometry_Shelly Ermawati_22305141002-111.png
% // latex: \frac{1}{10}
% Kami dapat mencetak sudut di Euler, setelah mentransfer penyebaran ke
% radian.
>wa2 := arcsin(sqrt(1/10)); degprint(wa2)
18°26'5.82''
% Titik P adalah perpotongan dari garis bagi sudut dengan sumbu y.
>P := [0,tan(wa2)*4]
[0,  1.33333]
>plotPoint(P,"P"); plotSegment(A,P):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-112.png
% Mari kita periksa sudut dalam contoh spesifik kita.
>computeAngle(C,A,P), computeAngle(P,A,B)
0.321750554397
0.321750554397
% Sekarang kita menghitung panjang bisektor AP.
% 
% Kita menggunakan teorema sinus di segitiga APC. Teorema ini menyatakan
% bahwa
% 
% latex: \frac{BC}{\sin(w_a)} = \frac{AC}{\sin(w_b)} = \frac{AB}{\sin(w_c)}
% %image% EMT4Geometry_Shelly Ermawati_22305141002-113.png
% // latex: \frac{BC}{\sin(w_a)} = \frac{AC}{\sin(w_b)} = \frac{AB}{\sin(w_c)}
% 
% memegang di segitiga apa pun. Persegi itu, itu diterjemahkan ke dalam
% apa yang disebut "hukum penyebaran"
% 
% latex: \frac{a}{s_a} = \frac{b}{s_b} = \frac{c}{s_b}
% %image% EMT4Geometry_Shelly Ermawati_22305141002-114.png
% // latex: \frac{a}{s_a} = \frac{b}{s_b} = \frac{c}{s_b}
% 
% dimana a, b, c menunjukkan qudrance.
% 
% Karena BPA sebaran adalah 1-sa2, kita dapatkan darinya bisa / 1 = b /
% (1-sa2) dan dapat menghitung bisa (kuadran garis-garis).
>&factor(ratsimp(b/(1-sa2))); bisa &= %; $bisa
 %image% EMT4Geometry_Shelly Ermawati_22305141002-115.png
% // latex: \frac{2\,b\,\left(b+a\right)}{\sqrt{b}\,\sqrt{b+a}+b+a}
% Mari kita periksa rumus ini untuk nilai Mesir kita.
>sqrt(mxmeval("at(bisa,[a=3^2,b=4^2])")), distance(A,P)
4.21637021356
4.21637021356
% Kami juga dapat menghitung P menggunakan rumus spread.
>py&=factor(ratsimp(sa2*bisa)); $py
 %image% EMT4Geometry_Shelly Ermawati_22305141002-116.png
% // latex: -\frac{b\,\left(\sqrt{b}\,\sqrt{b+a}-b-a\right)}{\sqrt{b}\,\sqrt{b+  a}+b+a}
% Nilainya sama dengan yang kita dapatkan dengan rumus trigonometri.
>sqrt(mxmeval("at(py,[a=3^2,b=4^2])"))
1.33333333333
% ** Sudut Akord
% 
% Perhatikan situasi berikut.
>setPlotRange(1.2); ...
>color(1); plotCircle(circleWithCenter([0,0],1)); ...
>A:=[cos(1),sin(1)]; B:=[cos(2),sin(2)]; C:=[cos(6),sin(6)]; ...
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"); ...
>color(3); plotSegment(A,B,"c"); plotSegment(A,C,"b"); plotSegment(C,B,"a"); ...
>color(1); O:=[0,0];  plotPoint(O,"0"); ...
>plotSegment(A,O); plotSegment(B,O); plotSegment(C,O,"r"); ...
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-117.png
% Kita bisa menggunakan Maxima untuk menyelesaikan rumus sebaran rangkap
% tiga untuk sudut di pusat O untuk r. Jadi kita mendapatkan rumus untuk
% jari-jari kuadrat dari keliling dalam hal kuadrat sisi.
% 
% Kali ini, Maxima menghasilkan beberapa angka nol yang kompleks, yang
% kita abaikan.
>&remvalue(a,b,c,r); // hapus nilai-nilai sebelumnya untuk perhitungan baru
>rabc &= rhs(solve(triplespread(spread(b,r,r),spread(a,r,r),spread(c,r,r)),r)[4]); $rabc
 %image% EMT4Geometry_Shelly Ermawati_22305141002-118.png
% // latex: -\frac{a\,b\,c}{c^2-2\,b\,c+a\,\left(-2\,c-2\,b\right)+b^2+a^2}
% Kita bisa menjadikannya sebagai fungsi Euler.
>function periradius(a,b,c) &= rabc;
% Mari kita periksa hasilnya untuk poin A, B, C kita.
>a:=quadrance(B,C); b:=quadrance(A,C); c:=quadrance(A,B);
% Radiusnya memang 1.
>periradius(a,b,c)
1
% Faktanya, penyebaran CBA hanya bergantung pada b dan c. Ini adalah
% teorema sudut akord.
>$spread(b,a,c)*rabc | ratsimp
 %image% EMT4Geometry_Shelly Ermawati_22305141002-119.png
% // latex: \frac{b}{4}
% Sebenarnya sebarannya adalah b/(4r), dan kita melihat bahwa sudut akor
% b adalah setengah dari sudut tengah.
>$doublespread(b/(4*r))-spread(b,r,r) | ratsimp
 %image% EMT4Geometry_Shelly Ermawati_22305141002-120.png
% // latex: 0
>
% 
% * Contoh 6: Jarak Minimal pada Bidang
% 
% ** Catatan awal
% 
% Fungsi yang, ke titik M di bidang, menetapkan jarak AM antara titik
% tetap A dan M, memiliki garis level yang agak sederhana: lingkaran
% berpusat di A.
>&remvalue();
>A=[-1,-1];
>function d1(x,y):=sqrt((x-A[1])^2+(y-A[2])^2)
>fcontour("d1",xmin=-2,xmax=0,ymin=-2,ymax=0,hue=1, ...
>title="If you see ellipses, please set your window square"):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-121.png
% dan grafiknya juga agak sederhana: bagian atas kerucut:
>plot3d("d1",xmin=-2,xmax=0,ymin=-2,ymax=0):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-122.png
% 
% Tentu saja minimal 0 dicapai di A.
% 
% ** Dua titik
% 
% Sekarang kita melihat fungsi MA + MB dimana A dan B adalah dua titik
% (tetap). Ini adalah "fakta yang terkenal" bahwa kurva level adalah
% elips, titik fokusnya adalah A dan B; kecuali untuk minimum AB yang
% konstan pada segmen [AB]:
>B=[1,-1];
>function d2(x,y):=d1(x,y)+sqrt((x-B[1])^2+(y-B[2])^2)
>fcontour("d2",xmin=-2,xmax=2,ymin=-3,ymax=1,hue=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-123.png
% Grafiknya lebih menarik:
>plot3d("d2",xmin=-2,xmax=2,ymin=-3,ymax=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-124.png
% Batasan ke baris (AB) lebih terkenal:
>plot2d("abs(x+1)+abs(x-1)",xmin=-3,xmax=3):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-125.png
% 
% ** Tiga titik
% 
% Sekarang hal-hal menjadi kurang sederhana: Sedikit kurang diketahui
% bahwa MA+MB+MC mencapai minimumnya pada satu titik bidang tetapi untuk
% menentukannya kurang sederhana:
% 
% 1) Jika salah satu sudut segitiga ABC lebih dari 120° (katakanlah
% dalam A), maka minimum tercapai pada titik ini (katakanlah AB+AC).
% 
% Contoh:
>C=[-4,1];
>function d3(x,y):=d2(x,y)+sqrt((x-C[1])^2+(y-C[2])^2)
>plot3d("d3",xmin=-5,xmax=3,ymin=-4,ymax=4);
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-126.png
>fcontour("d3",xmin=-4,xmax=1,ymin=-2,ymax=2,hue=1,title="The minimum is on A");
>P=(A_B_C_A)'; plot2d(P[1],P[2],add=1,color=12);
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-127.png
% 2) Tetapi jika semua sudut segitiga ABC kurang dari 120°, minimum
% berada pada titik F di bagian dalam segitiga, yang merupakan
% satu-satunya titik yang melihat sisi ABC dengan sudut yang sama (lalu
% masing-masing 120°) :
>C=[-0.5,1];
>plot3d("d3",xmin=-2,xmax=2,ymin=-2,ymax=2):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-128.png
>fcontour("d3",xmin=-2,xmax=2,ymin=-2,ymax=2,hue=1,title="The Fermat point");
>P=(A_B_C_A)'; plot2d(P[1],P[2],add=1,color=12);
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-129.png
% Merupakan kegiatan yang menarik untuk mewujudkan gambar di atas dengan
% perangkat lunak geometri; sebagai contoh, saya tahu soft tertulis di
% Java yang memiliki instruksi "garis kontur" ...
% 
% Semua ini di atas telah ditemukan oleh seorang hakim Prancis bernama
% Pierre de Fermat; dia menulis surat kepada para penggila lainnya
% seperti pendeta Marin Mersenne dan Blaise Pascal yang bekerja di
% bagian pajak penghasilan. Jadi titik unik F sehingga FA + FB + FC
% minimal disebut titik Fermat segitiga. Tetapi tampaknya beberapa tahun
% sebelumnya, Torriccelli Italia telah menemukan titik ini sebelum
% Fermat melakukannya! Pokoknya tradisinya adalah mencatat poin ini ...
% 
% ** Empat titik
% 
% Langkah selanjutnya adalah menambahkan titik D ke-4 dan mencoba
% meminimalkan MA + MB + MC + MD; katakanlah bahwa Anda adalah operator
% TV kabel dan ingin mencari di bidang mana Anda harus meletakkan antena
% sehingga Anda dapat memberi makan empat desa dan menggunakan kabel
% sesedikit mungkin!
>D=[1,1];
>function d4(x,y):=d3(x,y)+sqrt((x-D[1])^2+(y-D[2])^2)
>plot3d("d4",xmin=-1.5,xmax=1.5,ymin=-1.5,ymax=1.5):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-130.png
>fcontour("d4",xmin=-1.5,xmax=1.5,ymin=-1.5,ymax=1.5,hue=1);
>P=(A_B_C_D)'; plot2d(P[1],P[2],points=1,add=1,color=12);
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-131.png
% Masih ada minimum dan tidak ada yang dicapai pada simpul A, B, C atau
% D:
>function f(x):=d4(x[1],x[2])
>neldermin("f",[0.2,0.2])
[0.142858,  0.142857]
% Tampaknya dalam kasus ini, koordinat titik optimal rasional atau
% mendekati rasional ...
% 
% Sekarang ABCD adalah bujur sangkar, kami berharap bahwa titik optimal
% adalah pusat ABCD:
>C=[-1,1];
>plot3d("d4",xmin=-1,xmax=1,ymin=-1,ymax=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-132.png
>fcontour("d4",xmin=-1.5,xmax=1.5,ymin=-1.5,ymax=1.5,hue=1);
>P=(A_B_C_D)'; plot2d(P[1],P[2],add=1,color=12,points=1);
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-133.png
>
% * Contoh 7: Bola Dandelin dengan Povray
% 
% Anda dapat menjalankan demonstrasi ini, jika Anda memiliki Povray
% diinstal, dan pvengine.exe di jalur program.
% 
% Pertama kami menghitung jari-jari bola.
% 
% Jika Anda melihat gambar di bawah, Anda melihat bahwa kita membutuhkan
% dua lingkaran yang menyentuh dua garis yang membentuk kerucut, dan
% satu garis yang membentuk bidang yang memotong kerucut.
% 
% Kami menggunakan file geometry.e dari Euler untuk ini.
>load geometry;
% Pertama, dua garis yang membentuk kerucut.
>g1 &= lineThrough([0,0],[1,a])

                             [- a, 1, 0]

>g2 &= lineThrough([0,0],[-1,a])

                            [- a, - 1, 0]

% Lalu baris ketiga.
>g &= lineThrough([-1,0],[1,1])

                             [- 1, 2, 1]

% Kita merencanakan semuanya sejauh ini.
>setPlotRange(-1,1,0,2);
>color(black); plotLine(g(),"")
>a:=2; color(blue); plotLine(g1(),""), plotLine(g2(),""):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-134.png
% Sekarang kita ambil titik umum pada sumbu y.
>P &= [0,u]

                                [0, u]

% Hitung jarak ke g1.
>d1 &= distance(P,projectToLine(P,g1)); $d1
 %image% EMT4Geometry_Shelly Ermawati_22305141002-135.png
% // latex: \sqrt{\left(\frac{a^2\,u}{a^2+1}-u\right)^2+\frac{a^2\,u^2}{\left(a  ^2+1\right)^2}}
% Hitung jarak ke g.
>d &= distance(P,projectToLine(P,g)); $d
 %image% EMT4Geometry_Shelly Ermawati_22305141002-136.png
% // latex: \sqrt{\left(\frac{u+2}{5}-u\right)^2+\frac{\left(2\,u-1\right)^2}{  25}}
% Dan temukan pusat kedua lingkaran, di mana jaraknya sama.
>sol &= solve(d1^2=d^2,u); $sol
 %image% EMT4Geometry_Shelly Ermawati_22305141002-137.png
% // latex: \left[ u=\frac{-\sqrt{5}\,\sqrt{a^2+1}+2\,a^2+2}{4\,a^2-1} , u=  \frac{\sqrt{5}\,\sqrt{a^2+1}+2\,a^2+2}{4\,a^2-1} \right] 
% Ada dua solusi.
% 
% Kami mengevaluasi solusi simbolis, dan menemukan kedua pusat, dan
% kedua jarak.
>u := sol()
[0.333333,  1]
>dd := d()
[0.149071,  0.447214]
% Plot lingkaran ke dalam gambar.
>color(red);
>plotCircle(circleWithCenter([0,u[1]],dd[1]),"");
>plotCircle(circleWithCenter([0,u[2]],dd[2]),"");
>insimg;
 %image% EMT4Geometry_Shelly Ermawati_22305141002-138.png
% ** Plot dengan Povray
% 
% Selanjutnya kami merencanakan semuanya dengan Povray. Perhatikan bahwa
% Anda mengubah perintah apa pun dalam urutan perintah Povray berikut,
% dan menjalankan kembali semua perintah dengan Shift-Return.
% 
% Pertama kita memuat fungsi povray.
>load povray;
>defaultpovray="C:\Program Files\POV-Ray\v3.7\bin\pvengine.exe"
C:\Program Files\POV-Ray\v3.7\bin\pvengine.exe
% Kita mengatur adegan dengan tepat.
>povstart(zoom=11,center=[0,0,0.5],height=10°,angle=140°);
% Selanjutnya kita menulis dua bidang ke file Povray.
>writeln(povsphere([0,0,u[1]],dd[1],povlook(red)));
>writeln(povsphere([0,0,u[2]],dd[2],povlook(red)));
% Dan kerucutnya, transparan.
>writeln(povcone([0,0,0],0,[0,0,a],1,povlook(lightgray,1)));
% Kami menghasilkan pesawat terbatas pada kerucut.
>gp=g();
>pc=povcone([0,0,0],0,[0,0,a],1,"");
>vp=[gp[1],0,gp[2]]; dp=gp[3];
>writeln(povplane(vp,dp,povlook(blue,0.5),pc));
% Sekarang kami menghasilkan dua titik pada lingkaran, di mana bola
% menyentuh kerucut.
>function turnz(v) := return [-v[2],v[1],v[3]]
>P1=projectToLine([0,u[1]],g1()); P1=turnz([P1[1],0,P1[2]]);
>writeln(povpoint(P1,povlook(yellow)));
>P2=projectToLine([0,u[2]],g1()); P2=turnz([P2[1],0,P2[2]]);
>writeln(povpoint(P2,povlook(yellow)));
% Kemudian kami menghasilkan dua titik di mana bola menyentuh bidang.
% Ini adalah fokus elips.
>P3=projectToLine([0,u[1]],g()); P3=[P3[1],0,P3[2]];
>writeln(povpoint(P3,povlook(yellow)));
>P4=projectToLine([0,u[2]],g()); P4=[P4[1],0,P4[2]];
>writeln(povpoint(P4,povlook(yellow)));
% Selanjutnya kita menghitung perpotongan P1P2 dengan bidang.
>t1=scalp(vp,P1)-dp; t2=scalp(vp,P2)-dp; P5=P1+t1/(t1-t2)*(P2-P1);
>writeln(povpoint(P5,povlook(yellow)));
% Kami menghubungkan titik dengan segmen garis.
>writeln(povsegment(P1,P2,povlook(yellow)));
>writeln(povsegment(P5,P3,povlook(yellow)));
>writeln(povsegment(P5,P4,povlook(yellow)));
% Sekarang kami membuat pita abu-abu, di mana bola menyentuh kerucut.
>pcw=povcone([0,0,0],0,[0,0,a],1.01);
>pc1=povcylinder([0,0,P1[3]-defaultpointsize/2],[0,0,P1[3]+defaultpointsize/2],1);
>writeln(povintersection([pcw,pc1],povlook(gray)));
>pc2=povcylinder([0,0,P2[3]-defaultpointsize/2],[0,0,P2[3]+defaultpointsize/2],1);
>writeln(povintersection([pcw,pc2],povlook(gray)));
% Mulai program Povray.
>povend();
 %image% EMT4Geometry_Shelly Ermawati_22305141002-139.png
% Untuk mendapatkan Anaglyph ini, kita perlu memasukkan semuanya ke
% dalam fungsi scene. Fungsi ini akan digunakan dua kali nanti.
>function scene () ...
$global a,u,dd,g,g1,defaultpointsize;
$writeln(povsphere([0,0,u[1]],dd[1],povlook(red)));
$writeln(povsphere([0,0,u[2]],dd[2],povlook(red)));
$writeln(povcone([0,0,0],0,[0,0,a],1,povlook(lightgray,1)));
$gp=g();
$pc=povcone([0,0,0],0,[0,0,a],1,"");
$vp=[gp[1],0,gp[2]]; dp=gp[3];
$writeln(povplane(vp,dp,povlook(blue,0.5),pc));
$P1=projectToLine([0,u[1]],g1()); P1=turnz([P1[1],0,P1[2]]);
$writeln(povpoint(P1,povlook(yellow)));
$P2=projectToLine([0,u[2]],g1()); P2=turnz([P2[1],0,P2[2]]);
$writeln(povpoint(P2,povlook(yellow)));
$P3=projectToLine([0,u[1]],g()); P3=[P3[1],0,P3[2]];
$writeln(povpoint(P3,povlook(yellow)));
$P4=projectToLine([0,u[2]],g()); P4=[P4[1],0,P4[2]];
$writeln(povpoint(P4,povlook(yellow)));
$t1=scalp(vp,P1)-dp; t2=scalp(vp,P2)-dp; P5=P1+t1/(t1-t2)*(P2-P1);
$writeln(povpoint(P5,povlook(yellow)));
$writeln(povsegment(P1,P2,povlook(yellow)));
$writeln(povsegment(P5,P3,povlook(yellow)));
$writeln(povsegment(P5,P4,povlook(yellow)));
$pcw=povcone([0,0,0],0,[0,0,a],1.01);
$pc1=povcylinder([0,0,P1[3]-defaultpointsize/2],[0,0,P1[3]+defaultpointsize/2],1);
$writeln(povintersection([pcw,pc1],povlook(gray)));
$pc2=povcylinder([0,0,P2[3]-defaultpointsize/2],[0,0,P2[3]+defaultpointsize/2],1);
$writeln(povintersection([pcw,pc2],povlook(gray)));
$endfunction
% Anda membutuhkan kacamata merah / cyan untuk mengapresiasi efek
% berikut.
>povanaglyph("scene",zoom=11,center=[0,0,0.5],height=10°,angle=140°);
 %image% EMT4Geometry_Shelly Ermawati_22305141002-140.png
>
% * Contoh 8: Geometri Bumi
% 
% Di notebook ini, kami ingin melakukan beberapa komputasi bola.
% Fungsi-fungsi tersebut terdapat dalam file "spherical.e" di folder
% contoh. Kita perlu memuat file itu dulu.
>load spherical.e
Spherical functions for Euler. 
% Untuk memasukkan posisi geografis, kami menggunakan vektor dengan dua
% koordinat dalam radian (utara dan timur, nilai negatif untuk selatan
% dan barat). Berikut koordinat Kampus FMIPA UNY.
>FMIPA=[rad(-7,-46.467),rad(110,23.05)]
[-0.13569,  1.92657]
% Anda dapat mencetak posisi ini dengan sposprint (cetak posisi bola).
>sposprint(FMIPA) // posisi garis lintang dan garis bujur FMIPA UNY
S 7°46.467' E 110°23.050'
% Mari kita tambahkan dua kota lagi, Solo dan Semarang.
>Solo=[rad(-7,-34.333),rad(110,49.683)]; Semarang=[rad(-6,-59.05),rad(110,24.533)];
>sposprint(Solo), sposprint(Semarang),
S 7°34.333' E 110°49.683'
S 6°59.050' E 110°24.533'
% Pertama kita menghitung vektor dari satu bola ke bola lainnya pada
% bola ideal. Vektor ini adalah [heading, distance] dalam radian. Untuk
% menghitung jarak di bumi, kita mengalikan dengan jari-jari bumi pada
% garis lintang 7°.
>br=svector(FMIPA,Solo); degprint(br[1]), br[2]*rearth(7°)->km // perkiraan jarak FMIPA-Solo
65°20'26.60''
53.8945384608
% Ini adalah perkiraan yang bagus. Rutinitas berikut menggunakan
% perkiraan yang lebih baik. Pada jarak yang begitu dekat hasilnya
% hampir sama.
>esdist(FMIPA,Semarang)->" km", // perkiraan jarak FMIPA-Semarang
88.0114026318 km
% Ada fungsi untuk heading, dengan mempertimbangkan bentuk bumi yang
% elips. Sekali lagi, kami mencetak dengan cara yang canggih.
>sdegprint(esdir(FMIPA,Solo))
     65.34°
% Sudut segitiga melebihi 180° pada bola.
>asum=sangle(Solo,FMIPA,Semarang)+sangle(FMIPA,Solo,Semarang)+sangle(FMIPA,Semarang,Solo); degprint(asum)
180°0'10.77''
% Ini dapat digunakan untuk menghitung luas segitiga. Catatan: Untuk
% segitiga kecil, ini tidak akurat karena kesalahan pengurangan dalam
% asum-pi.
>(asum-pi)*rearth(48°)^2->" km^2", //perkiraan luas segitiga FMIPA-Solo-Semarang
2116.02948749 km^2
% Ada fungsi untuk ini, yang menggunakan garis lintang rata-rata
% segitiga untuk menghitung jari-jari bumi, dan menangani kesalahan
% pembulatan untuk segitiga yang sangat kecil.
>esarea(Solo,FMIPA,Semarang)->" km^2", //perkiraan yang sama dengan fungsi esarea()
2123.64310526 km^2
% Kami juga dapat menambahkan vektor ke posisi. Vektor berisi heading
% dan jarak, keduanya dalam radian. Untuk mendapatkan vektor, kami
% menggunakan svector. Untuk menambahkan vektor ke posisi, kami
% menggunakan saddvector.
>v=svector(FMIPA,Solo); sposprint(saddvector(FMIPA,v)), sposprint(Solo),
S 7°34.333' E 110°49.683'
S 7°34.333' E 110°49.683'
% Fungsi-fungsi ini mengasumsikan bola yang ideal. Hal yang sama di
% bumi.
>sposprint(esadd(FMIPA,esdir(FMIPA,Solo),esdist(FMIPA,Solo))), sposprint(Solo),
S 7°34.333' E 110°49.683'
S 7°34.333' E 110°49.683'
% Mari kita beralih ke contoh yang lebih besar, Tugu Jogja dan Monas
% Jakarta (menggunakan Google Earth untuk mencari koordinatnya).
>Tugu=[-7.7833°,110.3661°]; Monas=[-6.175°,106.811944°];
>sposprint(Tugu), sposprint(Monas)
S 7°46.998' E 110°21.966'
S 6°10.500' E 106°48.717'
% Menurut Google Earth, jaraknya 429,66 km. Kami mendapatkan perkiraan
% yang bagus.
>esdist(Tugu,Monas)->" km", // perkiraan jarak Tugu Jogja - Monas Jakarta
431.565659488 km
% Judulnya sama dengan yang dihitung di Google Earth.
>degprint(esdir(Tugu,Monas))
294°17'2.85''
% Namun, kita tidak lagi mendapatkan posisi target yang tepat, jika kita
% menambahkan heading dan jarak ke posisi semula. Hal ini terjadi,
% karena kita tidak menghitung fungsi invers secara tepat, tetapi
% mengambil perkiraan jari-jari bumi di sepanjang jalan.
>sposprint(esadd(Tugu,esdir(Tugu,Monas),esdist(Tugu,Monas)))
S 6°10.500' E 106°48.717'
% Namun, kesalahannya tidak besar.
>sposprint(Monas),
S 6°10.500' E 106°48.717'
% Tentunya kita tidak bisa berlayar dengan tujuan yang sama dari satu
% tujuan ke tujuan lainnya, jika kita ingin mengambil jalur terpendek.
% Bayangkan, Anda terbang NE mulai dari titik mana pun di bumi. Kemudian
% Anda akan berputar ke kutub utara. Lingkaran besar tidak mengikuti
% arah yang konstan!
% 
% Perhitungan berikut menunjukkan bahwa kami jauh dari tujuan yang
% benar, jika kami menggunakan tajuk yang sama selama perjalanan kami.
>dist=esdist(Tugu,Monas); hd=esdir(Tugu,Monas);
% Sekarang kita tambahkan 10 kali sepersepuluh jaraknya, menggunakan
% heading ke Monas, kita sampai di Tugu.
>p=Tugu; loop 1 to 10; p=esadd(p,hd,dist/10); end;
% Hasilnya masih jauh.
>sposprint(p), skmprint(esdist(p,Monas))
S 6°11.250' E 106°48.372'
     1.529km
% Sebagai contoh lain, mari kita ambil dua titik di bumi pada ketinggian
% yang sama.
> P1=[30°,10°]; P2=[30°,50°];
% Jalur terpendek dari P1 ke P2 bukanlah lingkaran dengan garis lintang
% 30°, tetapi jalur yang lebih pendek mulai 10° lebih jauh ke utara di
% P1.
>sdegprint(esdir(P1,P2))
     79.69°
% Tapi, jika kita mengikuti pembacaan kompas ini, kita akan berputar ke
% kutub utara! Jadi kita harus menyesuaikan arah tujuan kita di
% sepanjang jalan. Untuk tujuan kasar, kami menyesuaikannya pada 1/10
% dari jarak total.
>p=P1;  dist=esdist(P1,P2); ...
>  loop 1 to 10; dir=esdir(p,P2); sdegprint(dir), p=esadd(p,dir,dist/10); end;
     79.69°
     81.67°
     83.71°
     85.78°
     87.89°
     90.00°
     92.12°
     94.22°
     96.29°
     98.33°
% Jaraknya tidak tepat, karena kita akan menambahkan sedikit kesalahan,
% jika kita mengikuti tajuk yang sama terlalu lama.
>skmprint(esdist(p,P2))
     0.203km
% Kami mendapatkan perkiraan yang baik, jika kami menyesuaikan heading
% setelah setiap 1/100 dari total jarak dari Tugu ke Monas.
>p=Tugu; dist=esdist(Tugu,Monas); ...
>  loop 1 to 100; p=esadd(p,esdir(p,Monas),dist/100); end;
>skmprint(esdist(p,Monas))
     0.000km
% Untuk keperluan navigasi, kita bisa mendapatkan urutan posisi GPS di
% sepanjang lingkaran besar menuju Monas dengan fungsi navigasi.
>load spherical; v=navigate(Tugu,Monas,10); ...
>  loop 1 to rows(v); sposprint(v[#]), end;
S 7°46.998' E 110°21.966'
S 7°37.422' E 110°0.573'
S 7°27.829' E 109°39.196'
S 7°18.219' E 109°17.834'
S 7°8.592' E 108°56.488'
S 6°58.948' E 108°35.157'
S 6°49.289' E 108°13.841'
S 6°39.614' E 107°52.539'
S 6°29.924' E 107°31.251'
S 6°20.219' E 107°9.977'
S 6°10.500' E 106°48.717'
% Kami menulis sebuah fungsi, yang menggambarkan bumi, dua posisi, dan
% posisi di antaranya.
>function testplot ...
$useglobal;
$plotearth;
$plotpos(Tugu,"Tugu Jogja"); plotpos(Monas,"Tugu Monas");
$plotposline(v);
$endfunction
% Sekarang plot semuanya.
>plot3d("testplot",angle=25, height=6,>own,>user,zoom=4):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-141.png
% Atau gunakan plot3d untuk mendapatkan tampilan anaglyphnya. Ini
% terlihat sangat bagus dengan kacamata merah / cyan.
>plot3d("testplot",angle=25,height=6,distance=5,own=1,anaglyph=1,zoom=4):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-142.png
>
% * Latihan
% 
% 1. Gambarlah segi-n beraturan jika diketahui titik pusat O, n, dan
% jarak titik pusat ke titik-titik sudut segi-n tersebut (jari-jari
% lingkaran luar segi-n), r.
% 
% Petunjuk:
% 
% - Besar sudut pusat yang menghadap masing-masing sisi segi-n adalah
% (360/n).
%% - Titik-titik sudut segi-n merupakan perpotongan lingkaran luar segi-n
% dan garis-garis yang melalui pusat dan saling membentuk sudut sebesar
% kelipatan (360/n).
%% - Untuk n ganjil, pilih salah satu titik sudut adalah di atas.
%% - Untuk n genap, pilih 2 titik di kanan dan kiri lurus dengan titik
% pusat.
%% - Anda dapat menggambar segi-3, 4, 5, 6, 7, dst beraturan.
% 
% 2. Gambarlah suatu parabola yang melalui 3 titik yang diketahui.
% 
% Petunjuk:
%% - Misalkan persamaan parabolanya y= ax^2+bx+c.
%% - Substitusikan koordinat titik-titik yang diketahui ke persamaan
% tersebut.
%% - Selesaikan SPL yang terbentuk untuk mendapatkan nilai-nilai a, b, c.
% 
% 3. Gambarlah suatu segi-4 yang diketahui keempat titik sudutnya,
% misalnya A, B, C, D.
%%    - Tentukan apakah segi-4 tersebut merupakan segi-4 garis singgung
% (sisinya-sisintya merupakan garis singgung lingkaran yang sama yakni
% lingkaran dalam segi-4 tersebut).
%%    - Suatu segi-4 merupakan segi-4 garis singgung apabila keempat
% garis bagi sudutnya bertemu di satu titik.
%%    - Jika segi-4 tersebut merupakan segi-4 garis singgung, gambar
% lingkaran dalamnya.
%%    - Tunjukkan bahwa syarat suatu segi-4 merupakan segi-4 garis
% singgung apabila hasil kali panjang sisi-sisi yang berhadapan sama.
% 
% 4. Gambarlah suatu ellips jika diketahui kedua titik fokusnya,
% misalnya P dan Q. Ingat ellips dengan fokus P dan Q adalah tempat
% kedudukan titik-titik yang jumlah jarak ke P dan ke Q selalu sama
% (konstan).
% 
% 5. Gambarlah suatu hiperbola jika diketahui kedua titik fokusnya,
% misalnya P dan Q. Ingat ellips dengan fokus P dan Q adalah tempat
% kedudukan titik-titik yang selisih jarak ke P dan ke Q selalu sama
% (konstan).
% 
% Jawab: 
% 
% 1. 
>o &:= [0,0]; c=circleWithCenter(o,5);
>color(1); setPlotRange(5); plotPoint(o); plotCircle(c);
>A=[-5,0]; plotPoint(A,"A");
>B=[5,0]; plotPoint(B,"B");
>plotSegment(A,B,""):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-143.png
>c1=circleWithCenter(A,distance(A,o));
>c2=circleWithCenter(B,distance(B,o));
>k=circleCircleIntersections(c1,c);
>l=circleCircleIntersections(c,c2);
>m=circleCircleIntersections(c2,c);
>n=circleCircleIntersections(c,c1);
>r=lineThrough(k,m); s=lineThrough(l,n);
>setPlotRange(8); plotPoint(o); plotCircle(c); plotPoint(A,"A"); plotPoint(B,"B"); plotSegment(A,B,"");
>color(4); plotCircle(c1); plotCircle(c2); plotPoint(k); plotPoint(l); plotPoint(m); plotPoint(n);
>color(5); plotLine(r); plotLine(s):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-144.png
>color(6); plotSegment(A,k,""); plotSegment(A,n,""); plotSegment(k,l,""); ...
> plotSegment(l,B,""); plotSegment(B,m,""); plotSegment(m,n,""):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-145.png
>
% 2.
>setPlotRange(5); A=[1,0]; B=[4,0]; C=[0,-4];
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-146.png
>sol &= solve([a+b=-c,16*a+4*b=-c,c=-4],[a,b,c])

                     [[a = - 1, b = 5, c = - 4]]

>function y&=-x^2+5*x-4

                               2
                            - x  + 5 x - 4

>plot2d("-x^2+5*x-4",-5,5,-5,5):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-147.png
% 3.
>setPlotRange(-5,5,-5,5);
>A=[-2,2]; plotPoint(A,"A");
>B=[2,2]; plotPoint(B,"B");
>C=[2,-2]; plotPoint(C,"C");
>D=[-2,-2]; plotPoint(D,"D");
>plotSegment(A,B);
>plotSegment(B,C);
>plotSegment(C,D);
>plotSegment(D,A);
>plotSegment(A,C,"q1");
>plotSegment(B,D,"q2");
>q1=lineThrough(A,C);
>q2=lineThrough(B,D);
>p=lineIntersection(q1,q2);
>plotLine(q1); plotLine(q2);
>plotPoint(p, "P");
>r=norm(p-projectToLine(p,lineThrough(A,B)))
2
>plotCircle(circleWithCenter(p,r),"lingkaran dalam segi-4 ABCD"):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-148.png
>AB=norm(A-B) // panjang sisi AB
4
>CD=norm(C-D) // panjang sisi CD
4
>AD=norm(A-D) // panjang sisi AD
4
>BC=norm(B-C) // panjang sisi BC
4
>AB.CD
16
>AD.BC
16
% 4. 
>P=[-1,-1]; Q=[1,-1];
>function d1(x,y):=sqrt((x-P[1])^2+(y-P[2])^2)
>Q=[1,-1]; function d2(x,y):=sqrt((x-P[1])^2+(y-P[2])^2)+sqrt((x-Q[1])^2+(y-Q[2])^2)
>fcontour("d2",xmin=-2,xmax=2,ymin=-3,ymax=1,hue=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-149.png
>plot3d("d2",xmin=-2,xmax=2,ymin=-3,ymax=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-150.png
% 5. 
>P=[-1,-1]; Q=[1,-1];
>function d1(x,y):=sqrt((x-p[1])^2+(y-p[2])^2)
>Q=[1,-1]; function d2(x,y):=sqrt((x-P[1])^2+(y-P[2])^2)+sqrt((x+Q[1])^2+(y+Q[2])^2)
>fcontour("d2",xmin=-2,xmax=2,ymin=-3,ymax=1,hue=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-151.png
>plot3d("d2",xmin=-2,xmax=2,ymin=-3,ymax=1):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-152.png
>plot2d("abs(x+1)+abs(x-1)",xmin=-3,xmax=3):
 %image% EMT4Geometry_Shelly Ermawati_22305141002-153.png
>      
>
>
